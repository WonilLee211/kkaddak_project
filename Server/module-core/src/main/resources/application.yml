server:
  port: 8087


spring:
  #  빈 정의를 덮어쓰도록 허용하는 방법
  #  임시 대책이기 때문에 근본대책 필요
  main:
    allow-bean-definition-overriding: true

  profiles:
    active: local # 기본 환경을 prod로 셋팅 local 개발할때는 local로 바꾸세요.

  jpa:
    open-in-view: false # Lazy loading을 사용하기 위해 Session을 Controller까지 유지하는 옵션
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true #To beautify or pretty print the SQL
        type:
          preferred_uuid_jdbc_type: CHAR # UUID 타입을 CHAR 타입으로 매핑
        show_sql: true #show sql
    # 어플리케이션 실행 시점에서 데이터베이스 연결이 아직 준비되지 않았더라도 예외가 발생 안함. 어플리케이션 안전성과 신뢰성 높임
    defer-datasource-initialization: true
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  sql:
    init:
      mode: always

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

  redis:
    host: redisdb
    port: 6379
    password: kkaddak208!

logging:
  config: classpath:log4j2.yml

custom:
  path:
    upload-images: '/var/lib/images'

  # 부하 테스트 이후 설정 최적화하기
#  hikari:
#    connectionTimeout: 30000
#    maximumPoolSize: 30
#    maxLifeTime: 97
#    poolName: HikariCP
#    readOnly: false
