buildscript {
    ext {
        springBootVersion = '2.7.9'
    }
    repositories {

        mavenCentral()  // Maven Central repository
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
    }
}


subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = 'com.example' // 해당 subprojects의 Maven Group ID를 정의
    version = '0.0.1-SNAPSHOT' // subprojects의 버전을 정의
    sourceCompatibility = '11' // 프로젝트의 소스 코드가 작성될 때 사용되는 JDK 버전을 설정
    targetCompatibility = '11' // 빌드된 프로젝트가 실행될 때 필요한 JDK 버전을 설정
    compileJava.options.encoding = 'UTF-8'

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-log4j2'   // log4j2
        compileOnly 'org.projectlombok:lombok'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        annotationProcessor 'org.projectlombok:lombok'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'

        // MariaDB
        implementation 'org.mariadb.jdbc:mariadb-java-client'
        runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
        // h2
        //runtimeOnly 'com.h2database:h2'
        testImplementation 'com.h2database:h2'

        implementation 'org.springframework.boot:spring-boot-starter-security'
        testImplementation 'org.springframework.security:spring-security-test'

        // 불필요한 리이브러리 제외
        configurations {
            all {
                exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
            }
        }
    }

    test {
        useJUnitPlatform()
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }
}

project(':module-core'){
    bootJar { enabled = false }
    jar { enabled = true }

    dependencies {
        implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.13.3'
        //Redis
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'

        // 유사도 검사 라이브러리
        implementation group: 'com.github.fracpete', name: 'musicg', version: '1.4.2.2'
        implementation 'org.bytedeco:javacv:1.5.7'
        implementation group: 'org.bytedeco', name: 'javacv-platform', version: '1.5.8'
    }
}

project(':module-api') {
    bootJar { enabled = true }
    jar { enabled = false }

    dependencies {
        implementation project(':module-core') // 컴파일 시 module-core project 로딩
        implementation 'org.springframework.boot:spring-boot-starter-web'

        // [JWT]
        implementation 'io.jsonwebtoken:jjwt:0.9.1'
        implementation 'org.springframework.security:spring-security-core:5.7.6'

        // swagger
        implementation 'io.springfox:springfox-boot-starter:3.0.0'
        implementation 'io.springfox:springfox-swagger-ui:3.0.0'

        // validation
        implementation 'javax.validation:validation-api:2.0.1.Final'
        implementation 'software.amazon.awssdk:s3:2.17.130'

    }
}

project(':module-batch'){
    bootJar {enabled = true}
    jar { enabled = false }

    dependencies {
        implementation project(':module-core')
        implementation 'org.springframework.boot:spring-boot-starter-web'

        // batch 관련 의존성
        implementation 'org.springframework.boot:spring-boot-starter-batch'
        testImplementation 'org.springframework.batch:spring-batch-test'

    }
}


